import { Optional } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { Observable } from 'rxjs/Observable';
import 'rxjs/add/observable/of';
import 'rxjs/add/operator/catch';
import 'rxjs/add/operator/do';
import 'rxjs/add/operator/finally';
import 'rxjs/add/operator/map';
import 'rxjs/add/operator/share';
import 'rxjs/add/observable/throw';
export declare class SvgIconRegistryService {
    private http;
    private iconsByUrl;
    private iconsLoadingByUrl;
    constructor(http: HttpClient);
    loadSvg(url: string): Observable<SVGElement>;
    unloadSvg(url: string): void;
}
export declare function SVG_ICON_REGISTRY_PROVIDER_FACTORY(parentRegistry: SvgIconRegistryService, http: HttpClient): SvgIconRegistryService;
export declare const SVG_ICON_REGISTRY_PROVIDER: {
    provide: typeof SvgIconRegistryService;
    deps: (Optional[] | typeof HttpClient)[];
    useFactory: (parentRegistry: SvgIconRegistryService, http: HttpClient) => SvgIconRegistryService;
};
